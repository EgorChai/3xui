#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ê–Ω–∏–º–∞—Ü–∏—è —Å–ø–∏–Ω–Ω–µ—Ä–∞
spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [%c] " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ root
if [ "$(id -u)" -ne 0 ]; then
    echo -e "${RED}‚úó –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root: sudo bash $0${NC}" >&2
    exit 1
fi

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ SSH-–ø–æ—Ä—Ç–∞ (10000-65300)
NEW_SSH_PORT=$(shuf -i 10000-65300 -n 1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH
echo -e "${BLUE}üîπ –ú–µ–Ω—è–µ–º SSH-–ø–æ—Ä—Ç –Ω–∞ $NEW_SSH_PORT...${NC}"
sed -i "s/^#\?Port .*/Port $NEW_SSH_PORT/" /etc/ssh/sshd_config
(systemctl restart sshd) & spinner $!
echo -e "\n${GREEN}‚úì SSH –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW
echo -e "${BLUE}üîπ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–µ—Ä–≤–æ–ª...${NC}"
(apt update && apt install -y ufw) & spinner $!
ufw --force reset
ufw default deny incoming
ufw default allow outgoing
ufw allow "$NEW_SSH_PORT/tcp"
ufw allow 80/tcp
ufw allow 443/tcp
ufw allow 54321/tcp
(ufw --force enable) & spinner $!
echo -e "\n${GREEN}‚úì –§–∞–µ—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω!${NC}"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
echo -e "${BLUE}üîπ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${NC}"
(apt install -y docker.io docker-compose) & spinner $!
(systemctl enable docker --now) & spinner $!
echo -e "\n${GREEN}‚úì Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ 3XUI
echo -e "${BLUE}üîπ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 3XUI...${NC}"
(bash <(curl -Ls https://raw.githubusercontent.com/3x-ui/3x-ui/master/install.sh)) & spinner $!
echo -e "\n${GREEN}‚úì 3XUI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USERNAME="xuiadmin$(shuf -i 1000-9999 -n 1)"
read -rp "$(echo -e ${YELLOW}"–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–ª–∏ Enter –¥–ª—è '$USERNAME'): "${NC})" CUSTOM_USER
[ -n "$CUSTOM_USER" ] && USERNAME="$CUSTOM_USER"

if id "$USERNAME" &>/dev/null; then
    echo -e "${YELLOW}‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $USERNAME —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.${NC}"
else
    (useradd -m -s /bin/bash "$USERNAME") & spinner $!
    echo "$USERNAME ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers
    PASS=$(openssl rand -base64 12)
    echo "$USERNAME:$PASS" | chpasswd
    echo -e "${GREEN}‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $USERNAME —Å–æ–∑–¥–∞–Ω.${NC}"
    echo -e "${YELLOW}üîë –ü–∞—Ä–æ–ª—å: $PASS${NC}"
fi

# –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤
echo -e "\n${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo -e "${BLUE}üîπ SSH-–ø–æ—Ä—Ç: $NEW_SSH_PORT${NC}"
echo -e "${BLUE}üîπ 3XUI: http://$(curl -s ifconfig.me):54321${NC}"
echo -e "${YELLOW}üîπ –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å 3XUI: admin / admin (—Å–º–µ–Ω–∏—Ç–µ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞!)${NC}"

# ASCII-–∞—Ä—Ç "CHAI"
echo -e "${RED}
  ____ _           _ 
 / ___| |__   __ _(_)
| |   | '_ \ / _` | |
| |___| | | | (_| | |
 \____|_| |_|\__,_|_|
${NC}"
